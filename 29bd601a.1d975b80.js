(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{143:function(n,t,e){"use strict";e.r(t),e.d(t,"frontMatter",(function(){return h})),e.d(t,"metadata",(function(){return v})),e.d(t,"rightToc",(function(){return g})),e.d(t,"default",(function(){return O}));var a=e(1),o=e(6),r=e(0),i=e.n(r),c=e(144),s=e(165),u=e(162);const l=i.a.createContext(null);function d(){return i.a.useContext(l)}function p(n){const[t,e]=i.a.useState(0);return i.a.createElement(l.Provider,Object(a.a)({value:[t,e]},n))}function m(){const[n,t]=d();return i.a.createElement(u.a,{onClick:()=>t(n=>n+1)},"Increment ",n)}function b(){const[n]=d();return i.a.createElement("div",null,"The current counter count is ",n)}const f=()=>i.a.createElement(p,null,i.a.createElement(u.b,null,i.a.createElement(m,null),i.a.createElement(u.a,{lookAtMe:!0,onClick:()=>{Object(s.f)(i.a.createElement(b,null))}},"Display toast")),i.a.createElement(s.d,{autoClose:!1,draggable:!1}));var h={id:"render-what-you-want",title:"Render more than string",sidebar_label:"Render more than string"},v={id:"render-what-you-want",title:"Render more than string",description:"You can render any valid `ReactNode`: string, number, component... This is really straightforward. ",source:"@site/docs/render-what-you-want.md",permalink:"/react-toastify/render-what-you-want",editUrl:"https://github.com/fkhadra/react-toastify-doc/edit/master/docs/render-what-you-want.md",sidebar_label:"Render more than string",sidebar:"someSidebar",previous:{title:"Handling autoClose",permalink:"/react-toastify/autoClose"},next:{title:"Remove toast programmatically",permalink:"/react-toastify/remove-toast"}},g=[{value:"Basic example",id:"basic-example",children:[]},{value:"Awesome example \ud83d\ude80",id:"awesome-example-",children:[]}],j={rightToc:g};function O(n){var t=n.components,e=Object(o.a)(n,["components"]);return Object(c.b)("wrapper",Object(a.a)({},j,e,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"You can render any valid ",Object(c.b)("inlineCode",{parentName:"p"},"ReactNode"),": string, number, component... This is really straightforward. "),Object(c.b)("h2",{id:"basic-example"},"Basic example"),Object(c.b)("div",{className:"admonition admonition-important alert alert--info"},Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Important")),Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"  When you render a component, a ",Object(c.b)("inlineCode",{parentName:"p"},"closeToast")," prop is injected into your component."))),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Msg = ({ closeToast }) => (\n  <div>\n    Lorem ipsum dolor\n    <button>Retry</button>\n    <button onClick={closeToast}>Close</button>\n  </div>\n)\n\nfunction App(){\n  const displayMsg = () => {\n    toast(<Msg />) \n    // toast(Msg) would also work\n  }\n\n  return (\n  <div>\n    <button onClick={displayMsg}>Click me</button>\n    <ToastContainer />\n  </div>\n);\n}\n")),Object(c.b)("p",null,'You can also render a component using a function. More or less like a "render props":'),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"toast(({ closeToast }) => <div>Functional swag \ud83d\ude0e</div>);\n")),Object(c.b)("h2",{id:"awesome-example-"},"Awesome example \ud83d\ude80"),Object(c.b)("p",null,"In this example we will use react context to share state accross a component and a toast. Increment and display a toast at the same time to see how the state stay in sync !"),Object(c.b)(f,{mdxType:"ContextExample"}),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'import React from "react";\nimport { ToastContainer, toast } from "react-toastify";\n\nconst CountContext = React.createContext(null);\n\nfunction useCount() {\n  const context = React.useContext(CountContext);\n  return context;\n}\n\nfunction CountProvider(props) {\n  const [count, setCount] = React.useState(0);\n\n  return <CountContext.Provider value={[count, setCount]} {...props} />;\n}\n\nfunction Counter() {\n  const [count, setCount] = useCount();\n  const increment = () => setCount((c) => c + 1);\n\n  return <Button onClick={increment}>Increment {count}</Button>;\n}\n\nfunction CountDisplay() {\n  const [count] = useCount();\n  return <div>The current counter count is {count}</div>;\n}\n\nexport const ContextExample = () => {\n  const displayToast = () => {\n    toast(<CountDisplay />);\n  };\n\n  return (\n    <CountProvider>\n      <Container>\n        <Counter />\n        <Button onClick={displayToast}>\n          Display toast\n        </Button>\n      </Container>\n      <ToastContainer autoClose={false} draggable={false} />\n    </CountProvider>\n  );\n};\n\n')),Object(c.b)("div",{className:"admonition admonition-important alert alert--info"},Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Important")),Object(c.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"  When you want to use a hook inside a toast you must do ",Object(c.b)("inlineCode",{parentName:"p"},"toast(<YourComponent />)"),"."),Object(c.b)("p",{parentName:"div"},"  ",Object(c.b)("inlineCode",{parentName:"p"},"toast(YourComponent)")," would not work because there is no way to know that this is a react element"))))}O.isMDXComponent=!0},162:function(n,t,e){"use strict";e.d(t,"a",(function(){return u})),e.d(t,"b",(function(){return l}));var a=e(170),o=e(149);function r(){var n=Object(a.a)(["\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin: 1rem auto;\n"]);return r=function(){return n},n}function i(){var n=Object(a.a)(['\n  cursor: pointer;\n  display: inline-block;\n  margin-bottom: 1rem;\n  font-size: 1.1rem;\n  height: 2.8rem;\n  letter-spacing: 0.1rem;\n  line-height: 2.8rem;\n  padding: 0 1.8rem;\n  text-align: center;\n  text-decoration: none;\n  white-space: nowrap;\n  position: relative;\n  z-index: 0;\n  color: #fff;\n  border-color: transparent;\n\n  &:before {\n    content: "";\n    background: linear-gradient(\n      45deg,\n      #ff0000,\n      #ff7300,\n      #fffb00,\n      #48ff00,\n      #00ffd5,\n      #002bff,\n      #7a00ff,\n      #ff00c8,\n      #ff0000\n    );\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    background-size: 400%;\n    z-index: -1;\n    filter: blur(5px);\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    animation: '," 20s linear infinite;\n    opacity: ",';\n    transition: opacity 0.3s ease-in-out;\n  }\n\n  &:active {\n    color: #000;\n  }\n\n  &:active:after {\n    background: transparent;\n  }\n\n  &:hover:before {\n    opacity: 1;\n  }\n\n  &:after {\n    z-index: -1;\n    content: "";\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: #111;\n    left: 0;\n    top: 0;\n  }\n']);return i=function(){return n},n}function c(){var n=Object(a.a)(["\n    0% { background-position: 0 0; }\n    50% { background-position: 400% 0; }\n    100% { background-position: 0 0; }\n"]);return c=function(){return n},n}var s=Object(o.b)(c()),u=o.a.button(i(),s,(function(n){return n.lookAtMe?1:0})),l=o.a.section(r())}}]);