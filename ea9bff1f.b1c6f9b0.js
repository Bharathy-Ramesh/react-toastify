(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{141:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return o})),a.d(e,"metadata",(function(){return b})),a.d(e,"rightToc",(function(){return l})),a.d(e,"default",(function(){return i}));var n=a(1),r=(a(0),a(146));const o={id:"toast",title:"toast",sidebar_label:"toast"},b={id:"api/toast",title:"toast",description:"## Props",source:"@site/docs/api/toast.md",permalink:"/react-toastify/api/toast",editUrl:"https://github.com/fkhadra/react-toastify-doc/edit/master/docs/api/toast.md",sidebar_label:"toast",sidebar:"someSidebar",previous:{title:"ToastContainer",permalink:"/react-toastify/api/toast-container"},next:{title:"cssTransition",permalink:"/react-toastify/api/css-transition"}},l=[{value:"Props",id:"props",children:[]},{value:"Usages",id:"usages",children:[]}],c={rightToc:l};function i({components:t,...e}){return Object(r.b)("wrapper",Object(n.a)({},c,e,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"props"},"Props"),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"  When displaying a toast, the options are inherited from the container. Toast options supersede ToastContainer props"))),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Options"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"position"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"One of top-right, top-center, top-left, bottom-right, bottom-center, bottom-left")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"onOpen"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"function"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Called when the notification appear")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"onClose"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"function"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Called when the notification disappear")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"autoClose"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bool ","|"," number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Delay in ms to close the toast. If set to false, the notification needs to be closed manually")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"closeButton"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ReactNode ","|"," bool"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A React Component to replace the default close button or ",Object(r.b)("inlineCode",{parentName:"td"},"false")," to hide the button")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"transition"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ReactNode"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A reference to a valid react-transition-group/Transition component")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"hideProgressBar"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bool"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Display or not the progress bar below the toast(remaining time)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"pauseOnHover"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bool"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Keep the timer running or not on hover")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"pauseOnFocusLoss"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bool"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Pause the timer when the window loses focus")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"closeOnClick"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bool"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Dismiss toast on click")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"className"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Add optional classes to the container")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bodyClassName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Add optional classes to the TransitionGroup container")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"style"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"object"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Add optional inline style to the container")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"progressClassName"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Add optional classes to the progress bar")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"progressStyle"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"object"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Add optional inline style to the progress bar")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"draggable"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bool"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Allow toast to be draggable")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"draggablePercent"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The percentage of the toast's width it takes for a drag to dismiss a toast(value between 0 and 100)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"draggableDirection"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'"x" ',"|",' "y"'),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"x")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"containerId"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Used to match a specific Toast container")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"role"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Define the ARIA role for the toasts")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"delay"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Let you delay the toast appearance. Pass a value in ms")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"onClick"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"function"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Called when click inside Toast notification")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"render"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ReactNode"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Only available when using ",Object(r.b)("inlineCode",{parentName:"td"},"toast.update"))))),Object(r.b)("h2",{id:"usages"},"Usages"),Object(r.b)("p",null,"All the method of toast return a ",Object(r.b)("strong",{parentName:"p"},"toastId")," except ",Object(r.b)("inlineCode",{parentName:"p"},"dismiss")," and ",Object(r.b)("inlineCode",{parentName:"p"},"isActive"),".\nThe ",Object(r.b)("strong",{parentName:"p"},"toastId")," can be used to remove a toast programmatically or to check if the toast is displayed."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'const options = {\n    onOpen: props => console.log(props.foo),\n    onClose: props => console.log(props.foo),\n    autoClose: 6000,\n    closeButton: FontAwesomeCloseButton,\n    type: toast.TYPE.INFO,\n    hideProgressBar: false,\n    position: toast.POSITION.TOP_LEFT,\n    pauseOnHover: true,\n    transition: MyCustomTransition,\n    progress: 0.2\n    // and so on ...\n};\n\n// display toasts\nconst toastId = toast("Hello", options);\ntoast(MyComponent, options); \ntoast(<MyComponent foo={bar}/>, options); \ntoast(({ closeToast }) => <div>Render props like</div>, options);\n\n//shortcut to different types\ntoast.success("Hello", options); \ntoast.info("World", options); \ntoast.warn(MyComponent, options); \ntoast.error("Error", options);\n\n// Remove all toasts !\ntoast.dismiss();\n\n// Remove given toast\ntoast.dismiss(toastId); \n\n//Check if a toast is displayed or not\ntoast.isActive(toastId); \n\n// update a toast\ntoast.update(toastId, {\n  type: toast.TYPE.INFO,\n  render: <Img foo={bar}/>\n});\n\n// Clear waiting queue when working with limit\ntoast.clearWaitingQueue();\n\n// Clear waiting queue for a specific container when working with multiple container\ntoast.clearWaitingQueue({ containerId: "anId" });\n\n\n// completes the controlled progress bar\ntoast.done(toastId);\n\n// configure a lazy container\ntoast.configure({\n  autoClose: 8000,\n  draggable: false,\n  //same as ToastContainer props\n})\n')))}i.isMDXComponent=!0},146:function(t,e,a){"use strict";a.d(e,"a",(function(){return p})),a.d(e,"b",(function(){return j}));var n=a(0),r=a.n(n);function o(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function b(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?b(Object(a),!0).forEach((function(e){o(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function c(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var i=r.a.createContext({}),s=function(t){var e=r.a.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):l({},e,{},t)),a},p=function(t){var e=s(t.components);return r.a.createElement(i.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.a.createElement(r.a.Fragment,{},e)}},O=Object(n.forwardRef)((function(t,e){var a=t.components,n=t.mdxType,o=t.originalType,b=t.parentName,i=c(t,["components","mdxType","originalType","parentName"]),p=s(a),O=n,j=p["".concat(b,".").concat(O)]||p[O]||d[O]||o;return a?r.a.createElement(j,l({ref:e},i,{components:a})):r.a.createElement(j,l({ref:e},i))}));function j(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=a.length,b=new Array(o);b[0]=O;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l.mdxType="string"==typeof t?t:n,b[1]=l;for(var i=2;i<o;i++)b[i]=a[i];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);