(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{132:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var a=n(1),r=n(6),o=(n(0),n(148)),c={id:"listen-for-changes",title:"Listen for changes",sidebar_label:"Listen for changes"},i={id:"listen-for-changes",title:"Listen for changes",description:"If you want to know when a toast is added, updated or removed, `toast` expose a `onChange` method. When called a function to unsubscribe is returned. The callback will receive a `ToastItem`. The item provides a bunch of useful properties `status`, `content`, `id`, `data`, etc...",source:"@site/docs/listen-for-changes.md",permalink:"/react-toastify/listen-for-changes",editUrl:"https://github.com/fkhadra/react-toastify-doc/edit/master/docs/listen-for-changes.md",sidebar_label:"Listen for changes",sidebar:"someSidebar",previous:{title:"Define callback",permalink:"/react-toastify/define-callback"},next:{title:"Use a custom close button or remove it",permalink:"/react-toastify/use-a-custom-close-button-or-remove-it"}},s=[],l={rightToc:s};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"If you want to know when a toast is added, updated or removed, ",Object(o.b)("inlineCode",{parentName:"p"},"toast")," expose a ",Object(o.b)("inlineCode",{parentName:"p"},"onChange")," method. When called a function to unsubscribe is returned. The callback will receive a ",Object(o.b)("inlineCode",{parentName:"p"},"ToastItem"),". The item provides a bunch of useful properties ",Object(o.b)("inlineCode",{parentName:"p"},"status"),", ",Object(o.b)("inlineCode",{parentName:"p"},"content"),", ",Object(o.b)("inlineCode",{parentName:"p"},"id"),", ",Object(o.b)("inlineCode",{parentName:"p"},"data"),", etc..."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'// import type { ToastItem } from "react-toastify";\n\ninterface ToastItem<Data = {}> {\n    id: Id;\n    content: React.ReactNode;\n    theme?: Theme;\n    type?: TypeOptions;\n    isLoading?: boolean;\n    containerId?: Id;\n    data: Data;\n    icon?: React.ReactNode | false;\n    status: "added" | "removed" | "updated" \n}\n\nconst unsubscribe = toast.onChange((payload: ToastItem) => {\n  switch (payload.status) {\n    case "added":\n      // new toast added\n      break;\n    case "updated":\n      // toast updated\n      break;\n    case "removed":\n      // toast has been removed\n      break;\n  }\n});\nunsubscribe();\n')),Object(o.b)("p",null,"For example, if I want to log something everytime there is a new error notification, with the new API it's trivial"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'toast.onChange(payload => {\n  if(payload.status === "added" && payload.type === toast.TYPE.ERROR) {\n    logger.error({\n      createdAt: Date.now(),\n      content: payload.content,\n      data: payload.data\n    })\n  }\n})\n')))}d.isMDXComponent=!0},148:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),d=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},p=function(e){var t=d(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(n),b=a,f=p["".concat(c,".").concat(b)]||p[b]||u[b]||o;return n?r.a.createElement(f,i({ref:t},l,{components:n})):r.a.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);